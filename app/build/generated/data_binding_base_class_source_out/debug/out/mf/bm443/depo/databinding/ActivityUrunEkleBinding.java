// Generated by view binder compiler. Do not edit!
package mf.bm443.depo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import mf.bm443.depo.R;

public final class ActivityUrunEkleBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnUrunKategoriEkle;

  @NonNull
  public final MaterialButton btnUrunuEkle;

  @NonNull
  public final LinearLayout kategoriLinearLayout;

  @NonNull
  public final TextInputEditText txtUrunAdi;

  @NonNull
  public final TextInputEditText txtUrunDeposu;

  @NonNull
  public final Spinner txtUrunKategori;

  @NonNull
  public final TextInputEditText txtUrunMiktar;

  @NonNull
  public final TextInputEditText txtYeniKategori;

  @NonNull
  public final TextInputLayout urunAdiWrapper;

  @NonNull
  public final TextInputLayout urunDeposuWrapper;

  @NonNull
  public final TextInputLayout urunKategoriWrapper;

  @NonNull
  public final TextInputLayout urunMiktarWrapper;

  @NonNull
  public final TextInputLayout yeniKategoriWrapper;

  private ActivityUrunEkleBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton btnUrunKategoriEkle, @NonNull MaterialButton btnUrunuEkle,
      @NonNull LinearLayout kategoriLinearLayout, @NonNull TextInputEditText txtUrunAdi,
      @NonNull TextInputEditText txtUrunDeposu, @NonNull Spinner txtUrunKategori,
      @NonNull TextInputEditText txtUrunMiktar, @NonNull TextInputEditText txtYeniKategori,
      @NonNull TextInputLayout urunAdiWrapper, @NonNull TextInputLayout urunDeposuWrapper,
      @NonNull TextInputLayout urunKategoriWrapper, @NonNull TextInputLayout urunMiktarWrapper,
      @NonNull TextInputLayout yeniKategoriWrapper) {
    this.rootView = rootView;
    this.btnUrunKategoriEkle = btnUrunKategoriEkle;
    this.btnUrunuEkle = btnUrunuEkle;
    this.kategoriLinearLayout = kategoriLinearLayout;
    this.txtUrunAdi = txtUrunAdi;
    this.txtUrunDeposu = txtUrunDeposu;
    this.txtUrunKategori = txtUrunKategori;
    this.txtUrunMiktar = txtUrunMiktar;
    this.txtYeniKategori = txtYeniKategori;
    this.urunAdiWrapper = urunAdiWrapper;
    this.urunDeposuWrapper = urunDeposuWrapper;
    this.urunKategoriWrapper = urunKategoriWrapper;
    this.urunMiktarWrapper = urunMiktarWrapper;
    this.yeniKategoriWrapper = yeniKategoriWrapper;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUrunEkleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUrunEkleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_urun_ekle, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUrunEkleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnUrunKategoriEkle;
      MaterialButton btnUrunKategoriEkle = ViewBindings.findChildViewById(rootView, id);
      if (btnUrunKategoriEkle == null) {
        break missingId;
      }

      id = R.id.btnUrunuEkle;
      MaterialButton btnUrunuEkle = ViewBindings.findChildViewById(rootView, id);
      if (btnUrunuEkle == null) {
        break missingId;
      }

      id = R.id.kategoriLinearLayout;
      LinearLayout kategoriLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (kategoriLinearLayout == null) {
        break missingId;
      }

      id = R.id.txtUrunAdi;
      TextInputEditText txtUrunAdi = ViewBindings.findChildViewById(rootView, id);
      if (txtUrunAdi == null) {
        break missingId;
      }

      id = R.id.txtUrunDeposu;
      TextInputEditText txtUrunDeposu = ViewBindings.findChildViewById(rootView, id);
      if (txtUrunDeposu == null) {
        break missingId;
      }

      id = R.id.txtUrunKategori;
      Spinner txtUrunKategori = ViewBindings.findChildViewById(rootView, id);
      if (txtUrunKategori == null) {
        break missingId;
      }

      id = R.id.txtUrunMiktar;
      TextInputEditText txtUrunMiktar = ViewBindings.findChildViewById(rootView, id);
      if (txtUrunMiktar == null) {
        break missingId;
      }

      id = R.id.txtYeniKategori;
      TextInputEditText txtYeniKategori = ViewBindings.findChildViewById(rootView, id);
      if (txtYeniKategori == null) {
        break missingId;
      }

      id = R.id.urunAdiWrapper;
      TextInputLayout urunAdiWrapper = ViewBindings.findChildViewById(rootView, id);
      if (urunAdiWrapper == null) {
        break missingId;
      }

      id = R.id.urunDeposuWrapper;
      TextInputLayout urunDeposuWrapper = ViewBindings.findChildViewById(rootView, id);
      if (urunDeposuWrapper == null) {
        break missingId;
      }

      id = R.id.urunKategoriWrapper;
      TextInputLayout urunKategoriWrapper = ViewBindings.findChildViewById(rootView, id);
      if (urunKategoriWrapper == null) {
        break missingId;
      }

      id = R.id.urunMiktarWrapper;
      TextInputLayout urunMiktarWrapper = ViewBindings.findChildViewById(rootView, id);
      if (urunMiktarWrapper == null) {
        break missingId;
      }

      id = R.id.yeniKategoriWrapper;
      TextInputLayout yeniKategoriWrapper = ViewBindings.findChildViewById(rootView, id);
      if (yeniKategoriWrapper == null) {
        break missingId;
      }

      return new ActivityUrunEkleBinding((LinearLayout) rootView, btnUrunKategoriEkle, btnUrunuEkle,
          kategoriLinearLayout, txtUrunAdi, txtUrunDeposu, txtUrunKategori, txtUrunMiktar,
          txtYeniKategori, urunAdiWrapper, urunDeposuWrapper, urunKategoriWrapper,
          urunMiktarWrapper, yeniKategoriWrapper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
